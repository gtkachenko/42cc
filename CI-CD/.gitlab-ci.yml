stages:
  - code-check
  - coverage
  - test
  - package
  - e2e
  - deploy
  - notification

default:
  image: node18
  tags:
    - demo-runner

before_script:
  - npm ci --no-audit --ignore-scripts

check-lint:
  stage: code-check
  allow_failure: false
  script:
    - npm run lint

check-ts:
  stage: code-check
  script:
    - npm run check:ts -ws --if-present

check-format:
  stage: code-checking
  allow_failure: false
  script:
    - npm run prettier:ci

code-coverage:
  stage: coverage
  script:
    - npm run test:coverage -ws --if-present
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/backend/coverage/lcov.info
      - ${CI_PROJECT_DIR}/frontend/coverage/lcov.info
      - ${CI_PROJECT_DIR}/common/coverage/lcov.info
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'
      when: always
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: always

test:
  stage: test
  script:
    - npm run test

sonarqube-check:
  image:
    name: sonarsource/sonar-scanner-cli:5.0
    entrypoint: [""]
  stage: test
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
    PROPERTIES_FILE: "sonar-project.properties"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner -Dproject.settings=$PROPERTIES_FILE
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

packaging:
  stage: package
  variables:
    IS_PROD_BUILD: "true"
  script:
    - npm run build
  artifacts:
    expire_in: 90d
    paths:
      - frontend/dist/
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'
    - if: $CI_COMMIT_BRANCH == '/^release.prod.\d+$/'

e2e-test:
  stage: e2e
  script:
    - npm run build
    - npm run start&
    - npm run e2e
  artifacts:
    when: always
    paths:
      - ${CI_PROJECT_DIR}/e2e/results.json

deploy:
  stage: deploy
  script:
    - npm ci --no-audit --ignore-scripts
    - npm run ci:diff
    - npm run ci:deploy

notification:
  stage: notification
  script:
    - npm i -g deployment-notification
    - send-notification
  needs:
    - job: "deploy"
      artifacts: true
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'
      when: on_success








